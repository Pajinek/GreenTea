---
- hosts: all
  remote_user: root
  ###gather_facts: no
  vars:
    homedir: "/data/greentea/web"
    greentea_user: "greentea"
    django_settings: "tttt.settings.production"
    elasticsearch: "elasticsearch.docker"
    elasticsearch_data_storage: "/usr/share/elasticsearch/data/"
  environment:
    DJANGO_SETTINGS_MODULE: "{{ django_settings }}"
  tasks:
    ## Elasticseach instance ###
    # only one instance of elastic search can be created
    - name: "Destroy running version of elasticsearch"
      shell: |
        docker stop "{{elasticsearch}}"
        docker rm "{{elasticsearch}}"
      tags:
        - renew
        - renew-elasticserach
      register: out
    - debug: var=out.stdout_lines

    - name: "Create new Elasticsearch in Docker"
      shell: |
        docker run -d -p 9200:9200 -p 9300:9300 -v "{{elasticsearch_data_storage}}":"{{elasticsearch_data_storage}}" --name "{{elasticsearch}}" -h "{{elasticsearch}}" elasticsearch:2
      tags:
        - renew
        - renew-elasticserach
        - elasticserach

    ## Grean tea instance ###
    - name: "Stop uwsgi instance of Django"
      shell:
        uwsgi --stop /run/greentea.pid
      tags:
        - deploy
        - restart
        - stop

    - name: "Update project from Github"
      shell: |
        git fetch
        git reset --hard HEAD
        git pull
        source env/bin/activate
        python manage.py collectstatic --noinput
      become: yes
      become_user: "{{ greentea_user }}"
      args:
        chdir: "{{ homedir }}"
      tags:
        - update
        - deploy

    - name: "Backup database"
      shell: |
        DB_NAME=$( python -c "from {{ django_settings }} import DATABASES; print DATABASES['default']['NAME']" )
        DB_HOST=$( python -c "from {{ django_settings }} import DATABASES; print DATABASES['default']['HOST']" )
        DB_USER=$( python -c "from {{ django_settings }} import DATABASES; print DATABASES['default']['USER']" )
        pg_dump "$DB_NAME" -U "$DB_USER" -h "$DB_HOST" | gzip > tttt.db.gz
      become: yes
      become_user: "{{ greentea_user }}"
      args:
        chdir: "{{ homedir }}"
      tags:
        - backup_db

    - name: "Fetch backup database"
      fetch: src=tttt.db.gz dest=tttt.db.gz flat=yes
      tags:
        - backup_db

    - name: "Migrate database schema"
      shell: |
        source env/bin/activate
        python manage.py migrate --noinput
      become: yes
      become_user: greentea
      args:
        chdir: "{{ homedir }}"
      tags:
        - deploy
        - migrate

    - name: "Start uwsgi instance of Django"
      shell:
        uwsgi -x /etc/uwsgi.d/tttt.conf
      tags:
        - deploy
        - restart
        - start

    - name: "Check if pid exists and application runs"
      shell:
        ps aux | grep $(cat /run/greentea.pid) | grep -v grep

      tags:
        - deploy
        - restart
        - start
...

