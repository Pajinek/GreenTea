---
- hosts: all
  remote_user: root
  ###gather_facts: no
  vars:
    # set information about your beaker instance
    beaker_server: "localhost"
    beaker_user: ""
    beaker_pass: ""
    # following options it isn't needed change
    homedir: "/var/www/greentea"
    django_settings: "tttt.settings.production"
    elasticsearch: "elasticsearch.docker"
    greentea_host: "greentea.docker"
    db_host: "postgresql.docker"
    db_pass: "default_pass"
    db_version: 9.5
  environment:
    DJANGO_SETTINGS_MODULE: "{{ django_settings }}"
  tasks:
    - name: "Test Docker service"
      command: "service docker status"

#    - name: "Enable Http"
#      shell: "firewall-cmd --add-service=http && firewall-cmd --add-service=http --permanent"

    - name: "Create storages for docker"
      shell: |
        mkdir -p {{ homedir }}/{{ item }}
        chcon -Rt svirt_sandbox_file_t {{ homedir }}/{{ item }}
        restorecon -rv  {{ homedir }}/{{ item }}
      with_items:
            - media
            - static
            - storage
            - pgsql/data
            - elasticsearch/data/

    - name: "Update docker images"
      command: docker pull {{ item }}
      with_items:
        - pajinek/greentea
        - elasticsearch:2
        - postgres:{{ db_version }}
      tags:
        - install
        - update

    ## Elasticseach instance ###
    # only one instance of elastic search can be created
    - name: "Destroy running version of elasticsearch"
      shell: |
        COUNT=$( docker ps -aq -f "name={{elasticsearch}}" | wc -l )
        [ $COUNT -gt 0 ] && docker stop "{{elasticsearch}}" &&
            docker rename "{{elasticsearch}}" "{{elasticsearch}}.$COUNT"
      tags:
        - install
      register: out
    - debug: var=out.stdout_lines

    - name: "Create new Elasticsearch in Docker"
      shell: |
        docker run -d -p 9200:9200 -p 9300:9300 -v "{{ homedir }}/elasticsearch/data/":"/usr/share/elasticsearch/data/" --name "{{elasticsearch}}" -h "{{elasticsearch}}" elasticsearch:2
      tags:
        - install
        - elasticserach

    ## Postgresql 9.5 ###
    - name: "Create Postgresql in Docker"
      shell: |
        docker ps | grep "{{ db_host }}" ||
        docker run -d --name "{{ db_host }}" -h "{{ db_host }}" -p 5432:5432 \
            -e POSTGRES_PASSWORD={{ db_pass }} \
            -v {{ homedir }}/pgsql/data:/var/lib/postgresql/data \
            postgres:{{ db_version }}
      tags:
        - install
        - update

    # only one instance of greentea can be created
    - name: "Destroy running version of elasticsearch"
      shell: |
        COUNT=$( docker ps -aq -f "name={{greentea_host}}" | wc -l )
        [ $COUNT -gt 0 ] && docker stop "{{greentea_host}}" &&
            docker rename "{{greentea_host}}" "{{greentea_host}}.$COUNT"
      tags:
        - install
      register: out
    - debug: var=out.stdout_lines

    ## GreenTea instance ###
    - name: Run Greentea in Docker
      shell: |
        docker run -d --name {{ greentea_host }} -h {{ greentea_host }} \
            --link {{ db_host }}:{{ db_host }} -p 80:8000 \
             -e POSTGRES_PASSWORD={{ db_pass }} \
             -e POSTGRES_SERVER={{ db_host }} \
             -e BEAKER_SERVER={{ beaker_server}} \
             -e BEAKER_USER={{ beaker_user}} \
             -e BEAKER_PASS={{ beaker_pass}} \
             -v /data/greentea/tttt/media/:{{homedir}}/media:Z \
             -v /data/greantea/tttt/static/:{{homedir}}/static:Z \
             -v /data/greentea/tttt/storage/:{{homedir}}/storage:Z \
                pajinek/greentea
      tags:
        - install
        - update

...

